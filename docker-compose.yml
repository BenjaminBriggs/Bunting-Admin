services:
  postgres:
    image: postgres:17
    container_name: bunting-postgres
    environment:
      POSTGRES_DB: bunting_admin
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d bunting_admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: bunting-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console (Web UI)
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Optional: MinIO client to create buckets automatically
  minio-init:
    image: minio/mc:latest
    container_name: bunting-minio-init
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 admin admin123;
      mc mb minio/bunting-configs --ignore-existing;
      mc anonymous set public minio/bunting-configs;
      echo 'MinIO setup complete';
      "

  pgadmin:
    image: dpage/pgadmin4:9
    container_name: bunting-pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80" # open http://localhost:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json

volumes:
  postgres_data:
  minio_data:
  pgadmin_data:
